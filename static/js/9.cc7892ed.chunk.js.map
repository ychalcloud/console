{"version":3,"sources":["pages/Dashboard.tsx"],"names":["TopCardContainer","TopCard","TopCardInfo","DashboardCardContainer","DashboardCardWrap","DashboardCard","CardHeaderWrap","CardContentWrap","CardChartContentWrap","CardHeader","CardIcon","Link","GridWrap","TopCardHeader","TopCardValue","iconCss","Dashboard","columnDefs","headerName","field","rowData","make","model","price","size","css","color","to","width","height","data","name","value","margin","left","top","bottom","right","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","dataKey","tick","fontSize","type","stroke","fill","className"],"mappings":"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","file":"static/js/9.cc7892ed.chunk.js","sourcesContent":["import React from \"react\";\nimport ServiceWrapper from \"../components/ServiceWrapper\";\n\nimport { AiOutlineSelect } from \"react-icons/ai\";\n\nimport {\n  AiOutlineDatabase,\n  AiOutlineCreditCard,\n  AiOutlineCloudServer,\n} from \"react-icons/ai\";\n\nimport styled from \"@emotion/styled\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { AgGridReact } from \"ag-grid-react\";\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from \"recharts\";\nimport ServiceWrapper2 from \"../components/ServiceWrapper2\";\nimport css from \"@emotion/css\";\n\nconst Dashboard: React.FC = () => {\n  const data = [\n    { name: \"오늘\", value: 4000 },\n    { name: \"어제\", value: 3000 },\n    { name: \"3일 전\", value: 2000 },\n    { name: \"4일 전\", value: 1223 },\n    { name: \"5일 전\", value: 1890 },\n    { name: \"6일 전\", value: 2390 },\n    { name: \"7일 전\", value: 3490 }\n  ];\n\n  const data1 = [\n    { name: \"5월\", value: 4000 },\n    { name: \"4월\", value: 3000 },\n    { name: \"3월\", value: 2000 },\n    { name: \"2월\", value: 1223 },\n    { name: \"1월\", value: 1890 },\n    { name: \"12월\", value: 2390 },\n    { name: \"11월\", value: 3490 }\n  ];\n\n  const columnDefs = [\n    {\n      headerName: \"Make\",\n      field: \"make\"\n    },\n    {\n      headerName: \"Model\",\n      field: \"model\"\n    },\n    {\n      headerName: \"Price\",\n      field: \"price\"\n    }\n  ];\n  const rowData = [\n    {\n      make: \"Toyota\",\n      model: \"Celica\",\n      price: 35000\n    },\n    {\n      make: \"Ford\",\n      model: \"Mondeo\",\n      price: 32000\n    },\n    {\n      make: \"Porsche\",\n      model: \"Boxter\",\n      price: 72000\n    }\n  ];\n\n  return (\n    <>\n      <TopCardContainer>\n        <TopCard>\n          <AiOutlineCloudServer size={50} css={iconCss} color=\"#7c2ce4\"/>\n          <TopCardInfo>\n            <TopCardHeader>실행중인 인스턴스</TopCardHeader>\n            <TopCardValue>2개</TopCardValue>\n          </TopCardInfo>\n        </TopCard>\n        <TopCard>\n          <AiOutlineDatabase size={50} css={iconCss} color=\"#7c2ce4\"/>\n          <TopCardInfo>\n            <TopCardHeader>서버 업타임(지난 일주일)</TopCardHeader>\n            <TopCardValue>98%</TopCardValue>\n          </TopCardInfo>\n        </TopCard>\n        <TopCard>\n          <AiOutlineCreditCard size={50} css={iconCss} color=\"#7c2ce4\"/>\n          <TopCardInfo>\n            <TopCardHeader>이번 달 청구 예상 요금</TopCardHeader>\n            <TopCardValue>1,280,000원</TopCardValue>\n          </TopCardInfo>\n        </TopCard>\n      </TopCardContainer>\n      <DashboardCardContainer>\n        <DashboardCardWrap>\n          <DashboardCard>\n            <CardHeaderWrap>\n              <CardHeader>트래픽 통계</CardHeader>\n              <CardIcon to=\"/\">\n                <AiOutlineSelect size={24} />\n              </CardIcon>\n            </CardHeaderWrap>\n            <CardChartContentWrap>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <AreaChart\n                  data={data}\n                  margin={{ left: -40, top: 10, bottom: 10, right: 2 }}\n                >\n                  <defs>\n                    <linearGradient id=\"pink\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                      <stop offset=\"5%\" stopColor=\"#ea6969\" stopOpacity={0.8} />\n                      <stop offset=\"95%\" stopColor=\"#ea6969\" stopOpacity={0} />\n                    </linearGradient>\n                    <linearGradient id=\"purple\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                      <stop offset=\"5%\" stopColor=\"#b45bff\" stopOpacity={0.8} />\n                      <stop\n                        offset=\"95%\"\n                        stopColor=\"#b45bff\"\n                        stopOpacity={0.0}\n                      />\n                    </linearGradient>\n                  </defs>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" tick={{ fontSize: 14 }} />\n                  <YAxis tick={false} />\n                  <Tooltip />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"value\"\n                    stroke=\"#ea6969\"\n                    fill=\"url(#pink)\"\n                  />\n                </AreaChart>\n              </ResponsiveContainer>\n            </CardChartContentWrap>\n          </DashboardCard>\n        </DashboardCardWrap>\n        <DashboardCardWrap>\n          <DashboardCard>\n            <CardHeaderWrap>\n              <CardHeader>지난 6개월 지출 통계</CardHeader>\n              <CardIcon to=\"/\">\n                <AiOutlineSelect size={24} />\n              </CardIcon>\n            </CardHeaderWrap>\n            <CardChartContentWrap>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <AreaChart\n                  data={data1}\n                  margin={{ left: -40, top: 10, bottom: 10, right: 2 }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" tick={{ fontSize: 14 }} />\n                  <YAxis tick={false} />\n                  <Tooltip />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"value\"\n                    stroke=\"#b45bff\"\n                    fill=\"url(#purple)\"\n                  />\n                </AreaChart>\n              </ResponsiveContainer>\n            </CardChartContentWrap>\n          </DashboardCard>\n        </DashboardCardWrap>\n        <DashboardCardWrap>\n          <DashboardCard>\n            <CardHeaderWrap>\n              <CardHeader>실행중인 인스턴스</CardHeader>\n              <CardIcon to=\"/\">\n                <AiOutlineSelect size={24} />\n              </CardIcon>\n            </CardHeaderWrap>\n            <CardContentWrap>\n              <GridWrap className=\"ag-theme-balham\">\n                <AgGridReact columnDefs={columnDefs} rowData={rowData} />\n              </GridWrap>\n            </CardContentWrap>\n          </DashboardCard>\n        </DashboardCardWrap>\n        <DashboardCardWrap>\n          <DashboardCard>\n            <CardHeaderWrap>\n              <CardHeader>결제 요청</CardHeader>\n              <CardIcon to=\"/\">\n                <AiOutlineSelect size={24} />\n              </CardIcon>\n            </CardHeaderWrap>\n            <CardContentWrap>\n              <GridWrap className=\"ag-theme-balham\">\n                <AgGridReact columnDefs={columnDefs} rowData={rowData} />\n              </GridWrap>\n            </CardContentWrap>\n          </DashboardCard>\n        </DashboardCardWrap>\n      </DashboardCardContainer>\n    </>\n  );\n};\n\nconst TopCardContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  padding: 30px;\n`;\n\nconst TopCard = styled.div`\n  display: flex;\n  width: 32%;\n  padding: 30px;\n  height: 100%;\n  background: white;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n  flex-direction: row;\n`;\n\nconst TopCardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DashboardCardContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  padding: 0 30px 30px 30px;\n  grid-column-gap: 30px;\n  grid-row-gap: 30px;\n  grid-template-rows: repeat(2, calc(50% - 15px));\n  grid-template-columns: repeat(2, calc(50% - 15px));\n`;\n\nconst DashboardCardWrap = styled.div`\n  display: flex;\n`;\n\nconst DashboardCard = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n`;\n\nconst CardHeaderWrap = styled.div`\n  display: flex;\n  width: 100%;\n  height: fit-content;\n  // padding: 18px 24px;\n  padding: 18px 0;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst CardContentWrap = styled(CardHeaderWrap)`\n  padding: 18px;\n  height: 100%;\n  background: white;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n`;\n\nconst CardChartContentWrap = styled(CardContentWrap)`\n  padding: 18px 18px 0 8px;\n`;\n\nconst CardHeader = styled.p`\n  font-size: 18px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-weight: 700;\n`;\n\nconst CardIcon = styled(Link)`\n  color: inherit;\n  text-decoration: none;\n`;\n\nconst GridWrap = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst TopCardHeader = styled(CardHeader)`\n  margin-bottom: 20px;\n`;\n\nconst TopCardValue = styled(CardHeader)`\n  font-weight: 400;\n`;\n\nconst iconCss = css`\n  margin-right: 30px;\n`;\n\nexport default Dashboard;\n"],"sourceRoot":""}